services:
  postgres:
    image: postgres:13
    container_name: gitea_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-gitea} 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-gitea} 
      POSTGRES_DB: ${POSTGRES_DB:-gitea}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gitea_net

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    restart: always
    environment:
      - USER_UID=${USER_UID}
      - USER_GID=${USER_GID}
      - GITEA__server__DOMAIN=${GITEA_DOMAIN}
      - GITEA__server__ROOT_URL=${GITEA_ROOT_URL}
      - GITEA__server__SSH_DOMAIN=${GITEA_SSH_DOMAIN}
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=postgres:5432
      - GITEA__database__NAME=${POSTGRES_DB:-gitea}
      - GITEA__database__USER=${POSTGRES_USER:-gitea}
      - GITEA__database__PASSWD=${POSTGRES_PASSWORD:-gitea}
      - GITEA__service__DISABLE_REGISTRATION=true # para deshabilitar el registro de usuarios
      - GITEA__service__DISABLE_ORGANIZATION_CREATION=true # para deshabilitar la creación de organizaciones
      - GITEA__server__SSH_CREATE_AUTHORIZED_KEYS_FILE=true # para crear el archivo authorized_keys
      - GITEA__server__SSH_AUTHORIZED_KEYS_BACKUP=true # para hacer una copia de seguridad del archivo authorized_keys
    ports:
      - "3000:3000"
      - "222:22"
    volumes:
      - gitea_data:/data # ← Volumen Docker en lugar de bind mount
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres
    networks:
      - gitea_net


networks:
  gitea_net:
    driver: bridge
    name: gitea_net
volumes:
  postgres_data:
    driver: local
  gitea_data:
    driver: local